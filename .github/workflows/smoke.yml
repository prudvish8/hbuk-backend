name: Smoke (prod)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

env:
  API: https://hbuk-backend-hvow.onrender.com
  HUSKY: "0"  # never run git hooks in CI

jobs:
  smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    # ðŸ‘‡ make the token available as an env var
    env:
      METRICS_TOKEN: ${{ secrets.HBUK_METRICS_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install (no scripts)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          npm ci --no-audit --no-fund --ignore-scripts

      - name: Health
        run: |
          set -euo pipefail
          curl -fsS "$API/health" >/dev/null
          curl -fsS "$API/health/db" >/dev/null

      - name: Register + Login
        id: auth
        env:
          EMAIL: "u${{ github.run_id }}@hbuk.dev"
          PASS: "test123"
        run: |
          set -euo pipefail
          curl -sS -X POST "$API/api/register" \
            -H 'Content-Type: application/json' \
            -H 'X-HBUK-SMOKE: 1' \
            -d "{\"email\":\"$EMAIL\",\"password\":\"$PASS\"}" >/dev/null || true

          TOKEN=$(curl -fsS -X POST "$API/api/login" \
            -H 'Content-Type: application/json' \
            -d "{\"email\":\"$EMAIL\",\"password\":\"$PASS\"}" | jq -r .token)
          echo "token=$TOKEN" >> "$GITHUB_OUTPUT"

      - name: Commit + Verify
        env:
          TOKEN: ${{ steps.auth.outputs.token }}
        run: |
          set -euo pipefail
          CONTENT=$(jq -c -n --arg t "$(date -u +%FT%TZ)" '{event:"ci-smoke",ts:$t,source:"github-actions"}')
          RES=$(curl -fsS -X POST "$API/api/commit" \
            -H "Authorization: Bearer $TOKEN" \
            -H 'Content-Type: application/json' \
            -d "{\"content\":\"$CONTENT\",\"latitude\":45.5,\"longitude\":-122.6,\"locationName\":\"SmokeTest\"}")
          ID=$(echo "$RES" | jq -r .id)
          DIG=$(echo "$RES" | jq -r .digest)
          test -n "$ID" && test -n "$DIG"
          curl -fsS "$API/api/verify/$ID/$DIG" | jq -e '.ok==true' >/dev/null

      - name: Metrics (token via header; query fallback)
        if: ${{ env.METRICS_TOKEN != '' }}
        run: |
          set -e
          curl -fsS -H "X-Metrics-Token: $METRICS_TOKEN" "$API/metrics" >/dev/null \
          || curl -fsS "$API/metrics?token=$METRICS_TOKEN" >/dev/null

      - name: "Metrics (skipped: no token configured)"
        if: ${{ env.METRICS_TOKEN == '' }}
        run: echo "Skipping metrics (no HBUK_METRICS_TOKEN secret)."
